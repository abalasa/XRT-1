name: Dayeh XRT Build/Install Test CI 

on:
  push:
    branches: [ master ]
  pull_request:	
    branches: [ master ]

jobs:
  build_matrix:
    strategy:
      matrix:
        os: [centos74, ubuntu2004, amazonlinux2]    
    runs-on: self-hosted-docker-${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      if: steps.cache-sha.outputs.cache-hit != 'true'
      run: |
        sudo yum -y update
        sudo src/runtime_src/tools/scripts/xrtdeps.sh -docker
    - name: XRT Centos Build
      if: ${{ matrix.os == 'centos74' }}
      run: cd build && chmod +x build.sh ; scl enable devtoolset-9 -- bash -c ./build.sh
    - name: XRT Ubuntu Build
      if: ${{ matrix.os == 'ubuntu2004' }}
      run: cd build && chmod +x build.sh ; ./build.sh
    - name: XRT AL2 Build
      if: ${{ matrix.os == 'amazonlinux2' }}
      run: cd build && chmod +x build.sh ; ./build.sh
    - name: Stash files
      uses: actions/upload-artifact@v2
      with:
        name: xrt-rpm-${{ matrix.os }}
        path: build/Release/xrt_*-xrt.rpm
  uninstall_xrt:
    strategy:
      matrix:
        os: [centos74, ubuntu2004, amazonlinux2]    
    runs-on: self-hosted-docker-${{ matrix.os }}
    steps:
      - name: Uninstall xrt rpms
        run: ${{ secrets.SUDO }} yum remove -y xrt xrt-aws
  install_matrix:
    strategy:
      matrix:
        os: [centos74, ubuntu2004, amazonlinux2]    
    environment: Test
    runs-on: self-hosted-docker-${{ matrix.os }}
    needs: [build_matrix, uninstall_xrt]
    steps:
      - name: Download XRT rpms
        uses: actions/download-artifact@v2
        with:
          name: xrt-rpm-${{ matrix.os }}
      - name: Install xrt rpms
        run: ls -al; ${{ secrets.SUDO }} yum install -y ./*.rpm

  board_reset:
    runs-on: self-hosted-bf-runner
    steps:
      - name: Reset board
        run: ${{ secrets.BF_COMMAND }} --log-file /tmp/logs/board_reset.log xrt-reset -n ${{ secrets.BF_HOST }}
        shell: bash
  board_test:
    environment: Test
    runs-on: self-hosted-bf-runner
    needs: [build_matrix, board_reset]
    steps:
      - name: Download XRT rpms
        uses: actions/download-artifact@v2
        with:
          name: xrt-rpm-centos74
      - name: Copy to bf 
        run: scp ./*.rpm ${{ secrets.BF_HOST }}:/home/${{ secrets.BF_USER }}/xrt-test-artifacts
      - name: Run on board
        run: ${{ secrets.BF_COMMAND }} --log-file /home/${{ secrets.BF_USER }}/xrt-test-artifacts/logs/test.OUTPUT xrt-test -n ${{ secrets.BF_HOST }} -p xilinx_u50_gen3x16_xdma_201920_3 -r 2020.3 -x /home/${{ secrets.BF_USER }}/xrt-test-artifacts/*-xrt.rpm --timeout 2400 --results-path /home/${{ secrets.BF_USER }}/xrt-test-artifacts/logs/test.OUTPUT
        shell: bash

  hw_emulation_tests:
    strategy:
      matrix:
        os: [centos74, ubuntu2004, amazonlinux2]    
    runs-on: self-hosted-docker-${{ matrix.os }}
    needs: [install_matrix]
    steps:
      - name: Run HW Emulation tests
        run: |
          source /proj/xbuilds/2021.1_daily_latest/installs/lin64/Vitis/2021.1/settings64.sh
          source /opt/xilinx/xrt/setup.sh
          export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/proj/xbuilds/2021.1_daily_latest/installs/lin64/Vitis/2021.1/lib/lnx64.o/Default
          cd /scratch/tests/PCIE_VITIS_DSV_XRT_hw_emu_lin_lin_x86_20210128_035800_XRT_XILINX_U50_GEN3X16_XDMA_201920_3_MISC_lnx64/
          export XCL_EMULATION_MODE=hw_emu; ./host.exe -d acc -k kernel.xclbin
        shell: bash
